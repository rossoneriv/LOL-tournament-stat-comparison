{"version":3,"sources":["modules/player.ts","hooks/usePlayer.tsx","components/StatSelectModal.tsx","components/common.tsx","components/PlayerSelector.tsx","components/PlayerBox.tsx","modules/tournament.ts","hooks/useTournament.tsx","components/TournamentSelect.tsx","components/CommonHeader.tsx","components/Main.tsx","modules/record.ts","hooks/useRecord.tsx","components/Record.tsx","App.tsx","serviceWorker.ts","modules/index.ts","index.tsx"],"names":["addPlayer","createAction","id","player","removePlayer","removeAll","changeSelectedStat","flag","stat","allCheckSelectedStat","changeTournament","tournament","getNewMaxStats","position","players","statList","maxStats","i","length","name","Math","max","Number","replace","createReducer","desc","selectedStat","recordStat","recordPosition","state","action","count","newPlayers","map","p","payload","slice","splice","push","filter","item","s","usePlayer","useSelector","data","dispatch","useDispatch","handleAddPlayer","e","playerActions","handleRemoveSelect","handleChange","target","value","handleChangeCheck","checked","handleAllCheck","AddStatButton","styled","div","StatSelectModal","useState","show","setShow","handleClose","onClick","Modal","onHide","Header","closeButton","Title","Body","checkFlag","includes","Form","Check","key","type","label","onChange","Footer","Button","variant","MainContainer","MainWrapper","main","ChoosePlayer","PlayerInfo","ImgWrap","InfoWrap","RemovePlayer","PlayerSelector","Object","keys","src","Player","onError","currentTarget","onerror","alt","Position","style","alignSelf","className","height","width","columnDefs","headerName","field","sortable","rowData","onRowClicked","ProgressWrap","styledComponentsTS","attrs","props","ProgressDiv","Progress","val","maxStat","mark","color","BadgeWrap","span","PlayerBox","padding","Badge","getTournamentDataAPI","a","axios","get","getTournamentDataAsync","createAsyncAction","getTournamentData","request","success","failure","response","console","log","pending","error","useTournament","useEffect","tournamentActions","TournamentSelect","Control","as","size","placeholder","list","nav","MenuWrap","SelectWrap","DropdownMenu","DropMenuWrap","CommonHeader","to","textDecoration","cursor","path","mdiMenu","title","horizontal","vertical","StatSelectButton","PlayerBoxSection","section","Main","Spinner","animation","role","changeStat","selectPosition","addSortCondition","toggleShowRegular","sortCondition","showRegular","find","o","asc","delSortCondition","newSortCondition","indexOf","record","recordActions","handleChangeStat","handleSelectPosition","handleAddSortCondition","handleToggleShowRegular","getNotSelectedStat","filterdList","getSortedPlayerList","filterSmallGame","maxGames","apply","Games","sort","p1","p2","sortArr","getSortCondition","sortMark","IconWrapper","StatRankingWrap","StatRankFirst","StatRankOthers","TableHeaderTr","tr","TableBodyTr","idx","TableBodyTd","td","sortCond","Record","useRecord","display","flexDirection","flexWrap","overflowY","JSON","parse","stringify","textAlign","backColor","backgroundColor","overflowX","marginTop","margin","entries","App","basename","process","exact","component","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.335832b4.chunk.js","sourcesContent":["import {createAction} from 'redux-actions';\r\nimport {ActionType, createReducer} from 'typesafe-actions';\r\n\r\nconst ADD_PLAYER = 'player/ADD_PLAYER';\r\nconst REMOVE_PLAYER = 'player/REMOVE_PLAYER';\r\nconst REMOVE_ALL = 'player/REMOVE_ALL';\r\nconst CHANGE_SELECTED_STAT = 'player/CHANGE_SELECTED_STAT';\r\nconst ALL_CHECK_SELECTED_STAT = 'player/ALL_CHECK_SELECTED_STAT';\r\nconst CHANGE_TOURNAMNET = 'player/CHANGE_TOURNAMENT';\r\nconst CHANGE_STAT = 'record/CHANGE_STAT';\r\nconst SELECT_POSITION = 'record/SELECT_POSITION';\r\n\r\nexport const addPlayer = createAction(ADD_PLAYER, (id: number, player: object) => ({id, player}));\r\nexport const removePlayer = createAction(REMOVE_PLAYER, (id: number) => id);\r\nexport const removeAll = createAction(REMOVE_ALL);\r\nexport const changeSelectedStat = createAction(CHANGE_SELECTED_STAT, (flag: boolean, stat: string) => ({flag, stat}));\r\nexport const allCheckSelectedStat = createAction(ALL_CHECK_SELECTED_STAT);\r\nexport const changeTournament = createAction(CHANGE_TOURNAMNET, (tournament: string) => tournament);\r\nexport const changeStat = createAction(CHANGE_STAT, (stat: string, id: number) => ({stat, id}));\r\nexport const selectPosition = createAction(SELECT_POSITION, (position: string) => position);\r\n\r\nconst actions = {addPlayer, removePlayer, removeAll, changeSelectedStat, allCheckSelectedStat, changeTournament, changeStat, selectPosition};\r\ntype playerAction = ActionType<typeof actions>;\r\n\r\ntype playerState = {\r\n    players: {[index: string]:any};\r\n    maxStats: {[index: string]:any};\r\n    statList: stat[];\r\n    selectedStat: string[];\r\n    tournament: string;\r\n    recordStat: string[];\r\n    recordPosition: string;\r\n}\r\n\r\ntype stat = {\r\n    name: string,\r\n    desc: string\r\n}\r\n\r\nconst initialState = {\r\n    players: [{}, {}, {}, {}, {}],\r\n    maxStats: {},\r\n    statList: [ {name: 'Games', desc: ''},\r\n                {name: 'Win rate', desc: ''},\r\n                {name: 'KDA', desc: ''},\r\n                {name: 'Avg kills', desc: ''},\r\n                {name: 'Avg deaths', desc: ''},\r\n                {name: 'Avg assists', desc: ''},\r\n                {name: 'CSM', desc: 'Average CS per minute per game'},\r\n                {name: 'GPM', desc: 'Average Gold per minute per game'},\r\n                {name: 'KP%', desc: 'Average Kill Participation per game'},\r\n                {name: 'DMG%', desc: 'Average share of team\\'s total damage to champions per game'},\r\n                {name: 'DPM', desc: 'Average damage to champions per minute per game'},\r\n                {name: 'VSPM', desc: 'Average Vision score per minute per game'},\r\n                {name: 'Avg WPM', desc: 'Average Wards per minute per game'},\r\n                {name: 'Avg WCPM', desc: 'Average Wards cleared per minute per game'},\r\n                {name: 'Avg VWPM', desc: 'Average Vision wards per minute per game'},\r\n                {name: 'GD@15', desc: 'Average Gold differential at 15 min'},\r\n                {name: 'CSD@15', desc: 'Average CS differential at 15 min'},\r\n                {name: 'XPD@15', desc: 'Average XP differential at 15 min'},\r\n                {name: 'FB %', desc: 'Firstblood participation(kill or assist)'},\r\n                {name: 'FB Victim', desc: 'Firstblood victim %'},\r\n                {name: 'Penta Kills', desc: 'Total pentakills'},\r\n                {name: 'Solo Kills', desc: 'Total solokills'}\r\n            ],\r\n    selectedStat: ['Games','Win rate','KDA','Avg kills','Avg deaths','Avg assists','KP%','DMG%','DPM'],\r\n    tournament: 'Mid-Season Cup 2020',\r\n    recordStat: ['KDA', 'KP%', 'DPM', 'GPM', 'Solo Kills'],\r\n    recordPosition: '',\r\n}\r\n\r\nconst getNewMaxStats = (players: any, statList: stat[]) => {\r\n    let maxStats: {[k: string]: any} = {};\r\n    for(let i=0; i<statList.length; i++){\r\n        maxStats[statList[i].name] = \r\n            Math.max( typeof(players[0][statList[i].name]) === 'number' ? players[0][statList[i].name] : Number((players[0][statList[i].name]||'0').replace(/[^0-9.]/g, ''))\r\n                    , typeof(players[1][statList[i].name]) === 'number' ? players[1][statList[i].name] : Number((players[1][statList[i].name]||'0').replace(/[^0-9.]/g, ''))\r\n                    , typeof(players[2][statList[i].name]) === 'number' ? players[2][statList[i].name] : Number((players[2][statList[i].name]||'0').replace(/[^0-9.]/g, ''))\r\n                    , typeof(players[3][statList[i].name]) === 'number' ? players[3][statList[i].name] : Number((players[3][statList[i].name]||'0').replace(/[^0-9.]/g, ''))\r\n                    , typeof(players[4][statList[i].name]) === 'number' ? players[4][statList[i].name] : Number((players[4][statList[i].name]||'0').replace(/[^0-9.]/g, ''))\r\n                    );\r\n    }\r\n    return maxStats;\r\n}\r\n\r\nconst player = createReducer<playerState, playerAction>(initialState, {\r\n    [ADD_PLAYER]: (state, action) => {\r\n        let count = 0;\r\n        const newPlayers = state.players.map((p: any) => {\r\n            count++;\r\n            return count === action.payload.id ? action.payload.player : p;\r\n        });\r\n        return {...state, players: newPlayers, maxStats: getNewMaxStats(newPlayers, state.statList)}\r\n    },\r\n    [REMOVE_PLAYER]: (state, action) => {\r\n        let newPlayers = state.players.slice();\r\n        newPlayers.splice(action.payload-1, 1);\r\n        newPlayers.push({});\r\n        return {...state, players: newPlayers, maxStats: getNewMaxStats(newPlayers, state.statList)}\r\n    },\r\n    [REMOVE_ALL]: (state) => ({...state, players: [{}, {}, {}, {}, {}]}),\r\n    [CHANGE_SELECTED_STAT]: (state, action) => {\r\n        const {flag, stat} = action.payload;\r\n        if(flag){\r\n            return {...state, selectedStat: [...state.selectedStat, stat]}\r\n        }\r\n        else {\r\n            return {...state, selectedStat: state.selectedStat.filter(item => item !== stat)}\r\n        }\r\n    },\r\n    [ALL_CHECK_SELECTED_STAT]: (state) => {\r\n        const selectedStat = state.statList.length !== state.selectedStat.length ?\r\n                                state.statList.map(item => item.name) :\r\n                                [];\r\n        return {\r\n            ...state,\r\n            selectedStat: selectedStat\r\n        }\r\n    },\r\n    [CHANGE_TOURNAMNET]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            tournament: action.payload\r\n        }\r\n    },\r\n    [CHANGE_STAT]: (state, action) => {\r\n        return {...state, recordStat: [...state.recordStat.map((s, i) => {\r\n            if(i === action.payload.id)  return action.payload.stat;\r\n            else return s;\r\n        })]}\r\n    },\r\n    [SELECT_POSITION]: (state, action) => {\r\n        return {...state, recordPosition: action.payload.position}\r\n    },\r\n});\r\n\r\nexport default player;","import {useDispatch, useSelector} from 'react-redux';\r\nimport * as playerActions from '../modules/player';\r\nimport {RootState} from '../modules';\r\n\r\nconst usePlayer = () => {\r\n    const {players, maxStats, selectedStat, statList, tournament} = useSelector((state: RootState) => state.player);\r\n    const {data} = useSelector((state: RootState) => state.tournament);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddPlayer = (e: any, id: number) => {\r\n        dispatch(playerActions.addPlayer(id, e.data));\r\n    }\r\n\r\n    const handleRemoveSelect = (id: number) => {\r\n        dispatch(playerActions.removePlayer(id));\r\n    }\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(playerActions.changeTournament(e.target.value));\r\n    }\r\n\r\n    const handleChangeCheck = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(playerActions.changeSelectedStat(e.target.checked, e.target.id));\r\n    }\r\n\r\n    const handleAllCheck = () => {\r\n        dispatch(playerActions.allCheckSelectedStat());\r\n    }\r\n\r\n    return {\r\n        players, maxStats, selectedStat, statList, tournament, data, handleAddPlayer, handleRemoveSelect, handleChange, handleChangeCheck, handleAllCheck\r\n    };\r\n}\r\n\r\nexport default usePlayer;","import React, {useState} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport usePlayer from '../hooks/usePlayer';\r\nimport styled from 'styled-components';\r\n\r\nconst StatSelectModal = () => {\r\n    const {statList, selectedStat, handleChangeCheck, handleAllCheck} = usePlayer();\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <AddStatButton onClick={handleShow}>\r\n                <small><b>Add Stat</b></small>\r\n            </AddStatButton>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Stat View/Hide</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {statList.map( stat => {\r\n                        const {name, desc} = stat;\r\n                        const checkFlag = selectedStat.includes(name) ;\r\n                        return <Form.Check \r\n                                    key={name} \r\n                                    type='checkbox' \r\n                                    id={name} \r\n                                    label={<><b>{name}</b><small>{desc?' - ' + desc:''}</small></>}\r\n                                    onChange={handleChangeCheck} \r\n                                    checked={checkFlag}\r\n                                />\r\n                    })}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleAllCheck}>\r\n                    All Check\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nconst AddStatButton = styled.div`\r\n    border-radius: 20px;\r\n    background-color: #495057;\r\n    color: white;\r\n    width: 60px;\r\n    height: 28px;\r\n    text-align: center;\r\n    text-shadow: 0 0 5px #FFF, 0 0 10px #FFF, 0 0 15px #FFF, 0 0 20px #C0C0C0, 0 0 30px #C0C0C0, 0 0 40px #C0C0C0, 0 0 55px #C0C0C0, 0 0 75px #C0C0C0;\r\n    cursor: pointer;\r\n    box-shadow: 5px 5px 5px gray;\r\n`;\r\n\r\nexport default StatSelectModal;","import styled from 'styled-components';\r\n\r\n// styled-components\r\nexport const MainContainer = styled.div`\r\n    background-image: url('background.jpg');\r\n    min-height: 85vh;\r\n    background-color: #eae8e3;\r\n    padding: 70px 10rem 1rem 10rem;\r\n    overflow-y: auto;\r\n\r\n    @media screen and (max-width: 1150px) {\r\n        padding-left: 2rem;\r\n        padding-right: 2rem;\r\n    }\r\n\r\n    @media screen and (max-width: 842px) {\r\n        padding-top: 94px;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        padding-top: 124px;\r\n        padding: 124px 0rem 1rem 0rem;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const MainWrapper = styled.main`\r\n    overflow-y: auto;\r\n    padding: 1rem 1rem;\r\n    background: white;\r\n    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\r\n    margin: 0 auto;\r\n    min-height: 500px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n\r\n    @media screen and (max-width: 825px) {\r\n        padding: .15rem .15rem;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n    min-height: 15vh;\r\n    background: #343a40;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;","import React, {useState} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport usePlayer from '../hooks/usePlayer';\r\nimport styled from 'styled-components';\r\n\r\ntype props = {\r\n    id: number;\r\n}\r\n\r\nconst PlayerSelector = ({id}: props) => {\r\n    const {players, data, handleRemoveSelect, handleAddPlayer} = usePlayer();\r\n    const [show, setShow] = useState(false);\r\n    \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const columnDefs: {headerName: string, field: string, sortable: boolean, width: number, filter?: boolean}[] = [\r\n        {headerName: 'Player', field: 'Player', sortable: true, filter: true, width: 150},\r\n        {headerName: 'Position', field: 'Position', sortable: true, width: 150},\r\n        {headerName: 'Games', field: 'Games', sortable: true, width: 130},\r\n    ];\r\n\r\n    return(\r\n        <>\r\n            {Object.keys(players[id-1]).length === 0 ? \r\n                <ChoosePlayer onClick={handleShow}>\r\n                    <p><b>Choose<br/> Player</b></p>\r\n                </ChoosePlayer> : \r\n                <PlayerInfo>\r\n                    <RemovePlayer onClick={(e) => handleRemoveSelect(id)}>&times;</RemovePlayer>\r\n                    <ImgWrap>\r\n                        <img src={`player/${players[id-1].Player}.png`} onError={(e)=>{e.currentTarget.onerror = null; e.currentTarget.src='player/noplayer.png'}} \r\n                             alt={players[id-1].Player}></img>\r\n                    </ImgWrap>\r\n                    <InfoWrap>\r\n                        <img src={`position/${players[id-1].Position}.png`} alt={players[id-1].Position}></img>\r\n                        <h4 style={{alignSelf:'center'}}><b>{players[id-1].Player}</b></h4>\r\n                    </InfoWrap>\r\n                </PlayerInfo>\r\n            }\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Players</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"ag-theme-alpine\" style={ {height: '700px', width: '450px'} }>\r\n                        <AgGridReact\r\n                            columnDefs={columnDefs}\r\n                            rowData={data}\r\n                            onRowClicked={(e: any) => {handleAddPlayer(e, id); handleClose()}}>\r\n                        </AgGridReact>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n// styled-components\r\nconst ChoosePlayer = styled.div`\r\n    // border: solid #ccc;\r\n    // border-style: dashed;\r\n    // border-radius: 25px; \r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    text-shadow: 5px 5px 0 #e2e2e2;\r\n    font-size: 1.5rem;\r\n    color: #909090;\r\n    height: -webkit-fill-available;\r\n    justify-content: center;\r\n    text-align: center;\r\n    background-image: linear-gradient(rgba(255,255,255,0.8), rgba(255,255,255,0.8)), url('choose-player.png');\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    min-height: 500px;\r\n`;\r\n\r\nconst PlayerInfo = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-flow: column;\r\n    position: relative;\r\n`;\r\n\r\nconst ImgWrap = styled.div`\r\n    width: 80px;\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    margin: 1rem .3rem .3rem .3rem;\r\n    border: 1px inset;\r\n`;\r\n\r\nconst InfoWrap = styled.div`\r\n    display: flex;\r\n\r\n    @media screen and (max-width: 1420px) {\r\n        flex-flow: column;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst RemovePlayer = styled.div`\r\n    position: absolute;\r\n    top: 3px;\r\n    right: 3px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    font-size: larger;\r\n    padding: 3px 10px;\r\n`;\r\n\r\nexport default PlayerSelector;","import React from 'react';\r\nimport usePlayer from '../hooks/usePlayer';\r\nimport styled from 'styled-components';\r\nimport styledComponentsTS from 'styled-components-ts';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\ntype props = {\r\n    id: number;\r\n}\r\n\r\nconst PlayerBox = ({id}: props) => {\r\n    const {players, selectedStat, maxStats} = usePlayer();\r\n\r\n    return (\r\n        <div style={{padding: '1rem 0 1rem 0'}}>\r\n            <div>\r\n                {Object.keys(players[id-1]).length > 0 \r\n                ? Object.keys(players[id-1]).map( stat => {\r\n                    if(stat !== 'Player' && stat !== 'Position' && stat !== 'Team' && selectedStat.includes(stat)) {\r\n                        const val: number = typeof(players[id-1][stat]) === 'number' ? players[id-1][stat] : Number( (players[id-1][stat]||'0').replace(/[^0-9.]/g, '') );\r\n                        let mark = val === maxStats[stat] ? true : false;\r\n                        return (\r\n                            <ProgressWrap key={stat}>\r\n                                {mark ? \r\n                                    <div>\r\n                                        <small>\r\n                                            <b>{stat} ({players[id-1][stat]})  </b>\r\n                                            <BadgeWrap>     <Badge variant=\"dark\">best</Badge>      </BadgeWrap>\r\n                                        </small>\r\n                                    </div> : \r\n                                    <div><small>{stat} ({players[id-1][stat]})</small></div>\r\n                                }\r\n                                <ProgressDiv>\r\n                                    <Progress maxStat={maxStats[stat]} val={val} id={id} mark={mark}></Progress>\r\n                                </ProgressDiv>\r\n                            </ProgressWrap>\r\n                        )\r\n                    }\r\n                    return null;\r\n                })\r\n                : <div></div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// styled-components\r\nconst ProgressWrap = styledComponentsTS<any>(styled.div).attrs(props => ({\r\n    key: props.key\r\n}))`\r\n    padding: .35rem .5rem .35rem .5rem\r\n`;\r\n\r\nconst ProgressDiv = styled.div`\r\n    background-color: #E9E9E9;\r\n    border-radius: .5rem;\r\n`;\r\n\r\nconst Progress = styledComponentsTS<any>(styled.div)`\r\n    width: calc(100% * ${props =>props.val} / ${props => props.maxStat});\r\n    height: 10px;\r\n    background-color: ${({id, mark}) => {\r\n        let color = '';\r\n        switch(id){\r\n            case 1: if(mark) color= '#e03131'; else color= '#ff8787'; break;\r\n            case 2: if(mark) color= '#f76707'; else color= '#ffc078'; break;\r\n            case 3: if(mark) color= '#099268'; else color= '#63e6be'; break;\r\n            case 4: if(mark) color= '#3b5bdb'; else color= '#91a7ff'; break;\r\n            case 5: if(mark) color= '#6741d9'; else color= '#b197fc'; break;\r\n        }\r\n        return color;\r\n    }};\r\n    border-radius: 1rem;\r\n    transition: 1s ease;\r\n    transitionDelay: 0.5s;\r\n`;\r\n\r\nconst BadgeWrap = styled.span`\r\n    @media screen and (max-width: 1280px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport default PlayerBox;","import {createAction} from 'redux-actions';\r\nimport {createAsyncAction, ActionType, createReducer} from 'typesafe-actions';\r\nimport axios, {AxiosResponse} from 'axios';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '.';\r\n\r\nasync function getTournamentDataAPI(tournament: string) {\r\n    return await axios.get(`jsonData/${tournament}.json`);\r\n}\r\n\r\nconst GET_TOURNAMENT_DATA_PENDING = 'tournament/GET_TOURNAMENT_DATA_PENDING';\r\nconst GET_TOURNAMENT_DATA_SUCCESS = 'tournament/GET_TOURNAMENT_DATA_SUCCESS';\r\nconst GET_TOURNAMENT_DATA_FAILURE = 'tournament/GET_TOURNAMENT_DATA_FAILURE';\r\nconst CHANGE_TOURNAMNET = 'tournament/CHANGE_TOURNAMENT';\r\n\r\nexport const getTournamentDataAsync = createAsyncAction(\r\n    GET_TOURNAMENT_DATA_PENDING,\r\n    GET_TOURNAMENT_DATA_SUCCESS,\r\n    GET_TOURNAMENT_DATA_FAILURE\r\n)<undefined, AxiosResponse, boolean>();\r\n\r\nexport function getTournamentData(tournament: string): ThunkAction<void, RootState, null, TournamentAction> { \r\n    return async dispatch => {\r\n        const {request, success, failure} = getTournamentDataAsync;\r\n        dispatch(request());\r\n        try{\r\n            const response = await getTournamentDataAPI(tournament);\r\n            dispatch(success(response));\r\n        } catch(error) {\r\n            console.log(error);\r\n            dispatch(failure(true));\r\n            throw(error);\r\n        }\r\n    };\r\n}\r\nexport const changeTournament = createAction(CHANGE_TOURNAMNET, (tournament: string) => tournament);\r\n\r\n\r\n\r\ntype TournametState = {\r\n    pending: boolean;\r\n    error: boolean;\r\n    data: Object[];\r\n}\r\n\r\ntype TournamentAction = ActionType<typeof getTournamentDataAsync>;\r\n\r\n\r\n\r\n\r\n\r\nconst initialState: TournametState = {\r\n    pending: false,\r\n    error: false,\r\n    data: [],\r\n}\r\n\r\n\r\nconst tournament = createReducer<TournametState, TournamentAction>(initialState, {\r\n    [GET_TOURNAMENT_DATA_PENDING] : state => ({\r\n        ...state,\r\n        pending: true,\r\n        error: false\r\n    }),\r\n    [GET_TOURNAMENT_DATA_SUCCESS] : (state, action) => ({\r\n        ...state,\r\n        pending: false,\r\n        data: action.payload.data\r\n    }),\r\n    [GET_TOURNAMENT_DATA_FAILURE]: state => ({\r\n        ...state,\r\n        pending: false,\r\n        error: true\r\n    })\r\n})\r\n\r\nexport default tournament;","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport * as tournamentActions from '../modules/tournament';\r\nimport * as playerActions from '../modules/player';\r\nimport {RootState} from '../modules';\r\n\r\nconst useTournament = () => {\r\n    const {pending, error, data} = useSelector((state: RootState) => state.tournament);\r\n    const {tournament} = useSelector((state: RootState) => state.player);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(tournamentActions.getTournamentData(tournament));\r\n        dispatch(playerActions.removeAll());\r\n    }, [dispatch, tournament]);\r\n\r\n    return {\r\n        pending, error, data\r\n    };\r\n}\r\n\r\nexport default useTournament;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport usePlayer from '../hooks/usePlayer';\r\n\r\nconst TournamentSelect = () => {\r\n    const {handleChange} = usePlayer();\r\n    const tournamentList = [\r\n        'Mid-Season Cup 2020',\r\n        'LCK Spring 2020',\r\n        'LPL Spring 2020',\r\n        'LEC Spring 2020',\r\n        'LCS Spring 2020',\r\n        'World Championship 2019',\r\n        'LCK Summer 2019',\r\n        'LPL Summer 2019',\r\n        'LEC Summer 2019',\r\n        'LCS Summer 2019',\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Form.Control as='select' size='sm' placeholder=\"Select tournament\" onChange={handleChange}>\r\n                {tournamentList.map(list => <option key={list}>{list}</option>)}\r\n            </Form.Control>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TournamentSelect;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport TournamentSelect from './TournamentSelect';\r\nimport Icon from '@mdi/react';\r\nimport { mdiMenu } from '@mdi/js';\r\nimport styled from 'styled-components';\r\n\r\nconst CommonHeader = () => {\r\n\r\n    return (\r\n        <Header>\r\n            <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}><b>LOL Pro Stat Comparison</b></Link>\r\n            <MenuWrap>\r\n                <SelectWrap>\r\n                    <TournamentSelect/>\r\n                </SelectWrap>\r\n                <DropMenuWrap>\r\n                    <div style={{cursor: 'pointer'}}>\r\n                        <Icon path={mdiMenu} title='Select Menu' size={2} horizontal vertical/>\r\n                        <DropdownMenu className=\"dropMenuWrap\"> \r\n                            <Link className='linkMenu' to='/' style={{ textDecoration: 'none', color: 'black' }}><b><small>Comparison</small></b></Link>\r\n                            <Link className='linkMenu' to='/record' style={{ textDecoration: 'none', color: 'black' }}><b><small>Record</small></b></Link>\r\n                        </DropdownMenu>\r\n                    </div>\r\n                </DropMenuWrap>\r\n            </MenuWrap>\r\n        </Header>\r\n    );\r\n}\r\n\r\nconst Header = styled.nav`\r\n\tbackground: #343a40;\r\n\tposition: fixed;\r\n\twidth: 100%;\r\n\ttop: 0;\r\n\tleft: 0;\r\n    padding: .5rem 10rem;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    color: white;\r\n    font-size: 1.5em;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 100;\r\n    opacity: 0.9;\r\n\r\n    @media screen and (max-width: 986px) {\r\n        padding-right: 5rem;\r\n        padding-left: 5rem;\r\n    }\r\n\r\n    @media screen and (max-width: 640px) {\r\n        padding-right: 1rem;\r\n        padding-left: 0;\r\n    }\r\n`;\r\n\r\nconst MenuWrap = styled.div`\r\n    display: flex;\r\n    flex-basis: auto;\r\n    flex-grow: 1;\r\n    justify-content: flex-end;\r\n    padding: .5rem 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst SelectWrap = styled.div`\r\n    max-width: 250px;\r\n    padding: 0 .5rem 0 .5rem;\r\n`;\r\n\r\nconst DropdownMenu = styled.div`\r\n    display: none;\r\n    position: absolute;\r\n    background-color: #f1f1f1;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n    z-index: 10;\r\n    left: -10px;\r\n    width: auto;\r\n    border-radius: 5px;\r\n\r\n    .linkMenu {\r\n        padding: 5px 10px;\r\n        text-decoration: none;\r\n        display: block;\r\n        border-bottom: 0.5px solid #ddd;\r\n        font: initial;\r\n    }\r\n    .linkMenu:hover {\r\n        background-color: #ddd;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nconst DropMenuWrap = styled.div`\r\n    position: relative;\r\n    display: inline-block;\r\n\r\n    &:hover .dropMenuWrap {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport default CommonHeader;","import React from 'react';\r\nimport StatSelectModal from './StatSelectModal';\r\nimport styled from 'styled-components';\r\nimport { MainContainer, MainWrapper, Footer} from './common';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport PlayerSelector from './PlayerSelector';\r\nimport PlayerBox from './PlayerBox';\r\nimport useTournament from '../hooks/useTournament';\r\nimport usePlayer from '../hooks/usePlayer';\r\n// import Comparison from './Comparison';\r\nimport CommonHeader from './CommonHeader';\r\n\r\nconst Main = () => {\r\n    const {pending, error} = useTournament();\r\n    const {players} = usePlayer();\r\n\r\n    return (\r\n        <>  \r\n            <CommonHeader/>\r\n            <MainContainer>\r\n                <StatSelectButton>\r\n                {/* <div style={{position: 'fixed', top: '150px', left: '50px', zIndex: 10}}> */}\r\n                    <StatSelectModal/>\r\n                {/* </div> */}\r\n                </StatSelectButton>\r\n                <MainWrapper>\r\n                    { pending && \r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    }\r\n                    { error ? <h1>Sorry. Data could not be loaded.</h1> : \r\n                        <>\r\n                            <PlayerBoxSection id={Object.keys(players[0]).length > 0 ? '1' : '0'}>\r\n                                <PlayerSelector id={1}/>\r\n                                <PlayerBox id={1}></PlayerBox>\r\n                            </PlayerBoxSection>\r\n\r\n                            <PlayerBoxSection id={Object.keys(players[1]).length > 0 ? '2' : '0'}>\r\n                                <PlayerSelector id={2}/>\r\n                                <PlayerBox id={2}></PlayerBox>\r\n                                </PlayerBoxSection>\r\n\r\n                            {Object.keys(players[0]).length>0 && Object.keys(players[1]).length>0 ?\r\n                            <PlayerBoxSection id={Object.keys(players[2]).length > 0 ? '3' : '0'}>\r\n                                <PlayerSelector id={3}/>\r\n                                <PlayerBox id={3}></PlayerBox>\r\n                            </PlayerBoxSection>\r\n                            : <></>}\r\n\r\n                            {Object.keys(players[2]).length>0 ?\r\n                            <PlayerBoxSection id={Object.keys(players[3]).length > 0 ? '4' : '0'}>\r\n                                <PlayerSelector id={4}/>\r\n                                <PlayerBox id={4}></PlayerBox>\r\n                            </PlayerBoxSection>\r\n                            : <></>}\r\n\r\n                            {Object.keys(players[3]).length>0 ?\r\n                            <PlayerBoxSection id={Object.keys(players[4]).length > 0 ? '5' : '0'}>\r\n                                <PlayerSelector id={5}/>\r\n                                <PlayerBox id={5}></PlayerBox>\r\n                            </PlayerBoxSection>\r\n                            : <></>}\r\n                        </>\r\n                    }\r\n                </MainWrapper>\r\n            </MainContainer>\r\n            <Footer>\r\n                <p> &copy; 2020. Cheol-Woo Noh Website All Rights Reserved.</p>\r\n            </Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nconst StatSelectButton = styled.div`\r\n    position: fixed;\r\n    top: 100px;\r\n    left: 180px;\r\n    zIndex: 100;\r\n\r\n    @media screen and (max-width: 1150px) {\r\n        left: 25px;\r\n    }\r\n\r\n    @media screen and (max-width: 321px) {\r\n        top: 130px;\r\n        left: 5px;\r\n    }\r\n`;\r\n\r\nconst PlayerBoxSection = styled.section`\r\n    float: left;\r\n    display: inline-block;\r\n    margin: 10px;\r\n    width: 25%;\r\n    max-width: 230px;\r\n    min-width: 130px;\r\n\r\n    ${({id}: {[k: string]: any}) => {\r\n        if(Number(id) > 0) {\r\n            let color = '';\r\n            switch(Number(id)) {\r\n                case 1 : color= '#ffa8a8'; break;\r\n                case 2 : color= '#ffc078'; break;\r\n                case 3 : color= '#63e6be'; break;\r\n                case 4 : color= '#91a7ff'; break;\r\n                case 5 : color= '#b197fc'; break;\r\n                default : color= '#ccc';\r\n            }\r\n            return `border: solid ${color};\r\n                    border-radius: 10px;`;\r\n        } else\r\n            return `border: solid #ccc;\r\n                    border-style: dashed;\r\n                    border-radius: 10px; `;\r\n    }}\r\n\r\n    @media screen and (max-width: 865px) {\r\n        margin: 5px;\r\n    }\r\n`;\r\n\r\nexport default Main;","import {createAction} from 'redux-actions';\r\nimport {ActionType, createReducer} from 'typesafe-actions';\r\n\r\nconst CHANGE_STAT = 'record/CHANGE_STAT';\r\nconst SELECT_POSITION = 'record/SELECT_POSITION';\r\nconst ADD_SORT_CONDITION = 'record/ADD_SORT_CONDITION';\r\nconst TOGGLE_SHOW_REGULAR = 'record/TOGGLE_SHOW_REGULAR';\r\n\r\nexport const changeStat = createAction(CHANGE_STAT, (stat: string, id: number) => ({stat, id}));\r\nexport const selectPosition = createAction(SELECT_POSITION, (position: any) => position);\r\nexport const addSortCondition = createAction(ADD_SORT_CONDITION, (stat: string) => stat);\r\nexport const toggleShowRegular = createAction(TOGGLE_SHOW_REGULAR);\r\n\r\nconst actions = {changeStat, selectPosition, addSortCondition};\r\ntype recordAction = ActionType<typeof actions>;\r\n\r\ntype recordState = {\r\n    recordStat: string[];\r\n    recordPosition: string;\r\n    sortCondition: sortCondition[];\r\n    showRegular: boolean;\r\n}\r\n\r\ntype sortCondition = {\r\n    stat: string;\r\n    asc: boolean;\r\n}\r\n\r\nconst initialState = {\r\n    recordStat: ['KDA', 'KP%', 'DPM', 'GPM', 'Solo Kills'],\r\n    recordPosition: '',\r\n    sortCondition: [],\r\n    showRegular: false,\r\n}\r\n\r\nconst player = createReducer<recordState, recordAction>(initialState, {\r\n    [CHANGE_STAT]: (state, action) => {\r\n        return {...state, recordStat: [...state.recordStat.map((s, i) => {\r\n            if(i === action.payload.id)  return action.payload.stat;\r\n            else return s;\r\n        })]}\r\n    },\r\n    [SELECT_POSITION]: (state, action) => {\r\n        return {...state, recordPosition: action.payload}\r\n    },\r\n    [ADD_SORT_CONDITION]: (state, action) => {\r\n        if(state.sortCondition.find((o: sortCondition) => (o.stat === action.payload && !o.asc))){\r\n            const delSortCondition = state.sortCondition.find((o: sortCondition) => (o.stat === action.payload));\r\n            if(delSortCondition) {\r\n                const newSortCondition = state.sortCondition.slice();\r\n                newSortCondition.splice(state.sortCondition.indexOf(delSortCondition), 1);\r\n                return {...state, sortCondition: [...newSortCondition, {stat: action.payload, asc: true}]};\r\n            }\r\n            else return {...state};\r\n        } else if(state.sortCondition.find((o: sortCondition) => (o.stat === action.payload && o.asc))){\r\n            const delSortCondition = state.sortCondition.find((o: sortCondition) => (o.stat === action.payload));\r\n            if(delSortCondition) {\r\n                const newSortCondition = state.sortCondition.slice();\r\n                newSortCondition.splice(state.sortCondition.indexOf(delSortCondition), 1);\r\n                return {...state, sortCondition: newSortCondition};\r\n            }\r\n            else return {...state};\r\n        } \r\n        else return {...state, sortCondition: [...state.sortCondition, {stat: action.payload, asc: false}]}\r\n    },\r\n    [TOGGLE_SHOW_REGULAR]: (state) => {\r\n        return {...state, showRegular: !state.showRegular}\r\n    }\r\n});\r\n\r\nexport default player;","import {useEffect} from 'react';\r\nimport * as tournamentActions from '../modules/tournament';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport * as recordActions from '../modules/record';\r\nimport {RootState} from '../modules';\r\n\r\nconst usePlayer = () => {\r\n    const {recordStat, recordPosition, sortCondition, showRegular} = useSelector((state: RootState) => state.record);\r\n    const {data} = useSelector((state: RootState) => state.tournament);\r\n    const {tournament} = useSelector((state: RootState) => state.player);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(tournamentActions.getTournamentData(tournament));\r\n        dispatch(recordActions.selectPosition(''));\r\n    }, [dispatch, tournament]);\r\n\r\n    const handleChangeStat = (stat: string, id: number) => {\r\n        dispatch(recordActions.changeStat(stat , id));\r\n    }\r\n\r\n    const handleSelectPosition = (position: string) => {\r\n        dispatch(recordActions.selectPosition(position));\r\n    }\r\n\r\n    const handleAddSortCondition = (stat: string) => {\r\n        dispatch(recordActions.addSortCondition(stat));\r\n    }\r\n\r\n    const handleToggleShowRegular = () => {\r\n        dispatch(recordActions.toggleShowRegular());\r\n    }\r\n\r\n    return {\r\n        recordStat, recordPosition, sortCondition, showRegular, data, handleChangeStat, handleSelectPosition, handleAddSortCondition, handleToggleShowRegular\r\n    };\r\n}\r\n\r\nexport default usePlayer;","import React from 'react';\r\nimport {MainContainer, MainWrapper, Footer} from './common';\r\nimport Form from 'react-bootstrap/Form';\r\nimport usePlayer from '../hooks/usePlayer';\r\nimport useRecord from '../hooks/useRecord';\r\nimport styled from 'styled-components';\r\nimport styledComponentsTS from 'styled-components-ts';\r\nimport CommonHeader from './CommonHeader';\r\n\r\nconst Record = () => {\r\n    const {statList} = usePlayer();\r\n    const {recordStat, recordPosition, sortCondition, showRegular, data, handleChangeStat, handleSelectPosition, handleAddSortCondition, handleToggleShowRegular} = useRecord();\r\n\r\n    return(\r\n        <>\r\n            <CommonHeader/>\r\n            \r\n            <MainContainer>\r\n                <MainWrapper>\r\n                    <div style={{display:'flex', flexDirection:'column'}}>\r\n                        <div style={{display:'flex', alignSelf:'center'}}>\r\n                            <IconWrapper>\r\n                                <img src={`position/ALL.png`} alt={'ALL'} onClick={() => {handleSelectPosition('')}} style={{alignSelf:'center'}}></img>\r\n                            </IconWrapper>\r\n                            <IconWrapper>\r\n                                <img src={`position/TOP.png`} alt={'TOP'} onClick={() => {handleSelectPosition('TOP')}} style={{alignSelf:'center'}}></img>\r\n                            </IconWrapper>\r\n                            <IconWrapper>\r\n                                <img src={`position/JUNGLE.png`} alt={'JUNGLE'} onClick={() => {handleSelectPosition('JUNGLE')}} style={{alignSelf:'center'}}></img>\r\n                            </IconWrapper>\r\n                            <IconWrapper>\r\n                                <img src={`position/MID.png`} alt={'MID'} onClick={() => {handleSelectPosition('MID')}} style={{alignSelf:'center'}}></img>\r\n                            </IconWrapper>\r\n                            <IconWrapper>\r\n                                <img src={`position/ADC.png`} alt={'ADC'} onClick={() => {handleSelectPosition('ADC')}} style={{alignSelf:'center'}}></img>\r\n                            </IconWrapper>\r\n                            <IconWrapper>\r\n                                <img src={`position/SUPPORT.png`} alt={'SUPPORT'} onClick={() => {handleSelectPosition('SUPPORT')}} style={{alignSelf:'center'}}></img>\r\n                            </IconWrapper>\r\n                        </div>\r\n                        <div style={{display:'flex', flexDirection:'column'}}>\r\n                            <span style={{padding:'0.1rem 2rem'}}><h3><b>Stat Ranking</b></h3></span>\r\n                            <div style={{display:'flex', flexDirection:'row', padding:'0 1.5rem', flexWrap: 'wrap', overflowY: 'auto'}}>\r\n                            {recordStat.map((item, idx) => {\r\n                                return (\r\n                                    <StatRankingWrap key={`${item}_${idx}`}>\r\n                                        <Form.Control as='select' size='sm' onChange={(e) => {handleChangeStat(e.currentTarget.value, idx)}} value={recordStat[idx]}>\r\n                                            {getNotSelectedStat(item, statList, recordStat).map(list => <option key={list.name}>{list.name}</option>)}\r\n                                        </Form.Control>\r\n\r\n                                        {data.length > 0 ? getSortedPlayerList(item, JSON.parse(JSON.stringify(data)), recordPosition, true, null).map((p: any, i: number) => {\r\n                                            if(i < 5){\r\n                                                if(i === 0)  return(\r\n                                                    <StatRankFirst><b> {i+1}</b>\r\n                                                        <ImgWrap>\r\n                                                            <img src={`player/${p.Player}.png`} alt={p.Player} \r\n                                                            onError={(e)=>{e.currentTarget.onerror = null; e.currentTarget.src='player/noplayer.png'}} />\r\n                                                        </ImgWrap>\r\n                                                        <span key={`${p.Player}_${p.Position}`} style={{alignSelf:'center', textAlign:'center'}}>\r\n                                                            <b>{p.Player}</b><br/>\r\n                                                            <b style={{color:'#7048e8'}}>{p[item]}</b>\r\n                                                        </span>\r\n                                                    </StatRankFirst>\r\n                                                );\r\n\r\n                                                let backColor = ''\r\n                                                if(i%2 === 0) backColor= 'white';\r\n                                                else         backColor= '#f1f3f5';\r\n                                                return (\r\n                                                    <StatRankOthers key={`${p.Player}_${p.Position}`} style={{backgroundColor: backColor}}>\r\n                                                        <div>{i+1}{'\\u00A0'}{'\\u00A0'}</div>\r\n                                                        <div>{p.Player}</div>\r\n                                                        <div style={{textAlign:'right', width:'-webkit-fill-available'}}>{p[item]}</div>\r\n                                                    </StatRankOthers>\r\n                                                );\r\n                                            }\r\n                                            else return null;\r\n                                        }) : null}\r\n                                    </StatRankingWrap>\r\n                                );\r\n                            })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{display:'flex', flexDirection:'column', overflowX:\"scroll\", marginTop: '50px'}}>\r\n                        <span style={{padding:'0.1rem 2rem'}}><h3><b>Total List</b></h3></span>\r\n                        <small style={{padding:'0.1rem 2rem'}}><Form.Check type='checkbox' label='Only show regular player' onClick={handleToggleShowRegular}></Form.Check></small>\r\n                        <table style={{margin:'0px 1.5rem'}}>\r\n                            <thead>\r\n                            <TableHeaderTr>\r\n                                <th onClick={() => {handleAddSortCondition('Player')}} style={{padding: '0 0.5rem', cursor: 'pointer'}}>\r\n                                    <div style={{display:'flex'}}>\r\n                                        <div><small>Player</small></div>\r\n                                        <div style={{alignSelf:'center'}}>{'\\u00A0'}<b>{getSortCondition('Player', sortCondition)}</b></div>\r\n                                    </div>\r\n                                </th>\r\n                                <th onClick={() => {handleAddSortCondition('Position')}} style={{padding: '0 0.5rem', cursor: 'pointer'}}>\r\n                                    <div style={{display:'flex'}}>\r\n                                        <div><small>Position</small></div>\r\n                                        <div style={{alignSelf:'center'}}>{'\\u00A0'}<b>{getSortCondition('Position', sortCondition)}</b></div>\r\n                                    </div>\r\n                                </th>\r\n                                {statList.map((stat) => {\r\n                                    return <th key={stat.name} onClick={() => {handleAddSortCondition(stat.name)}} style={{padding: '0 0.5rem', cursor: 'pointer'}}>\r\n                                                <div style={{display:'flex'}}>\r\n                                                    <div><small>{stat.name}</small></div>\r\n                                                    <div style={{alignSelf:'center'}}>{'\\u00A0'}<b>{getSortCondition(stat.name, sortCondition)}</b></div>\r\n                                                </div>\r\n                                            </th>;\r\n                                })}\r\n                            </TableHeaderTr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {getSortedPlayerList(null, JSON.parse(JSON.stringify(data)), recordPosition, showRegular, sortCondition).map((p: any, i: number)=> {\r\n                                    return <TableBodyTr key={`${p.Player}_${p.Position}`} idx={i+1}>{Object.entries(p).map( ([key, value]:[string, any]) => {\r\n                                        let sortCond = '';\r\n                                        if(sortCondition.length > 0)    sortCond = sortCondition[sortCondition.length-1].stat;\r\n                                        return <TableBodyTd key={key} stat={key} sortCond={sortCond}><small>{value}</small></TableBodyTd>;\r\n                                    })}</TableBodyTr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </MainWrapper>\r\n            </MainContainer>\r\n            <Footer>\r\n                <p> &copy; 2020. Cheol-Woo Noh Website All Rights Reserved.</p>\r\n            </Footer>\r\n        </>\r\n    )\r\n}\r\n\r\nconst getNotSelectedStat = (item: string, statList: { name: string; desc: string; }[], recordStat: string[]) => {\r\n    const filterdList = recordStat.filter(stat => stat !== item);\r\n    return statList.filter(stat => !filterdList.includes(stat.name));\r\n}\r\n\r\nconst getSortedPlayerList = (item: string|null, players: object[], recordPosition: string, filterSmallGame: boolean, sortCondition: {stat: string, asc: boolean}[]|null) => {\r\n    if(filterSmallGame){\r\n        const maxGames = Math.max.apply(Math, players.map((p: any) => {return p.Games}));\r\n        players = players.filter((p: any) => p.Games >= maxGames*0.25);\r\n    }\r\n\r\n    if(recordPosition){\r\n        players = players.filter((p: any) => p.Position === recordPosition);\r\n    }\r\n    \r\n    if(item !== null && sortCondition === null){\r\n        return players.sort((p1: any, p2: any) => {\r\n            if(p1[item] === '-') p1[item] = 0;\r\n            if(p2[item] === '-') p2[item] = 0;\r\n\r\n            if(typeof(p1[item]) === 'string' ? Number(p1[item].replace(/[^0-9.]/g, '')) > Number(p2[item].replace(/[^0-9.]/g, '')) : p1[item] > p2[item])\r\n                return -1;\r\n            else if(typeof(p1[item]) === 'string' ? Number(p1[item].replace(/[^0-9.]/g, '')) < Number(p2[item].replace(/[^0-9.]/g, '')) : p1[item] < p2[item])    \r\n                return 1;\r\n            else return 0;\r\n        });\r\n    }\r\n    else if(item === null && sortCondition !== null){\r\n        for(let i=0; i<sortCondition.length; i++){\r\n            players.sort((p1: any, p2: any) => {\r\n                let sortArr = [];\r\n                if(sortCondition[i].asc)    sortArr = [1, -1, 0];\r\n                else                        sortArr = [-1, 1, 0];\r\n\r\n                if(p1[sortCondition[i].stat] === '-') p1[sortCondition[i].stat] = 0;\r\n                if(p2[sortCondition[i].stat] === '-') p2[sortCondition[i].stat] = 0;\r\n\r\n                if(sortCondition[i].stat === 'Player' || sortCondition[i].stat === 'Position'){\r\n                    if(p1[sortCondition[i].stat] > p2[sortCondition[i].stat])   return sortArr[0];\r\n                    else if(p1[sortCondition[i].stat] < p2[sortCondition[i].stat])  return sortArr[1];\r\n                    else    return sortArr[2];\r\n                }\r\n                else if(typeof(p1[sortCondition[i].stat]) === 'string' \r\n                    ? Number(p1[sortCondition[i].stat].replace(/[^0-9.]/g, '')) > Number(p2[sortCondition[i].stat].replace(/[^0-9.]/g, '')) \r\n                    : p1[sortCondition[i].stat] > p2[sortCondition[i].stat])\r\n                    return sortArr[0];\r\n                else if(typeof(p1[sortCondition[i].stat]) === 'string' \r\n                    ? Number(p1[sortCondition[i].stat].replace(/[^0-9.]/g, '')) < Number(p2[sortCondition[i].stat].replace(/[^0-9.]/g, '')) \r\n                    : p1[sortCondition[i].stat] < p2[sortCondition[i].stat])    \r\n                    return sortArr[1];\r\n                else return sortArr[2];\r\n            });\r\n        }\r\n        return players;\r\n    }\r\n    else return [];\r\n}\r\n\r\nconst getSortCondition = (stat: string, sortCondition: {stat: string, asc: boolean}[]): string => {\r\n    let sortMark: string = '';\r\n    if(sortCondition.find((o: {stat: string, asc: boolean}) => stat === o.stat && o.asc))  sortMark = '↑';\r\n    else if(sortCondition.find((o: {stat: string, asc: boolean}) => stat === o.stat && !o.asc))    sortMark = '↓';\r\n    return sortMark;\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n    width: 60px;\r\n    height: 60px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst StatRankingWrap = styled.section`\r\n    float: left;\r\n    display: inline-block;\r\n    margin: 10px;\r\n`;\r\n\r\nconst ImgWrap = styled.div`\r\n    width: 80px;\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    margin: 1rem .3rem .3rem .3rem;\r\n    border: 1px inset;\r\n`;\r\n\r\nconst StatRankFirst = styled.div`\r\n    display: flex;\r\n    border: solid 0.5px;\r\n    border-color: #e0e0e0;\r\n    padding: 0.5rem 0.65rem;\r\n`;\r\n\r\nconst StatRankOthers = styled.div`\r\n    border: solid 0.5px;\r\n    border-color: #e0e0e0;\r\n    display: flex;\r\n    padding: 0.25rem 0.65rem;\r\n`;\r\n\r\nconst TableHeaderTr = styled.tr`\r\n    border-top-style: double;\r\n    border-bottom-style: double;\r\n    background-color: #495057;\r\n    color: white;\r\n`;\r\n\r\nconst TableBodyTr = styledComponentsTS<any>(styled.tr)`\r\n    border-bottom: ${({idx}) => {\r\n        if(idx%5 === 0) return 'groove 2px';\r\n        else    return 'solid 0.5px';\r\n    }};\r\n    border-color: #e0e0e0;\r\n`;\r\n\r\nconst TableBodyTd = styledComponentsTS<any>(styled.td)`\r\n    padding: 0 0.5rem;\r\n    background-color: ${({stat, sortCond}) => {\r\n        if(stat === sortCond)   return '#ffc9c9';\r\n        else return '';\r\n    }};\r\n`;\r\n\r\nexport default Record;","import React from 'react';\r\nimport Main from './components/Main';\r\nimport Record from './components/Record';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n\treturn (\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<Route exact path=\"/\" component={Main}/>\r\n\t\t\t<Route path=\"/record\" component={Record}/>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport tournament from './tournament';\r\nimport player from './player';\r\nimport record from './record';\r\n\r\nconst rootReducer = combineReducers({\r\n    tournament,\r\n    player,\r\n    record\r\n});\r\n\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './modules';\nimport {Provider} from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(ReduxThunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}